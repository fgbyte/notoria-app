import type { ConfigContext, ExpoConfig } from '@expo/config'

const APP_NAME = 'Notoria' // ðŸ‘ˆ hardcode the app name here
const IS_DEV = process.env.APP_VARIANT === 'development'
const IS_PREVIEW = process.env.APP_VARIANT === 'preview'

const getUniqueIdentifier = () => {
	if (IS_DEV) {
		return `com.fgbyte.${APP_NAME}.dev`
	}

	if (IS_PREVIEW) {
		return `com.fgbyte.${APP_NAME}.preview`
	}

	return `com.fgbyte.${APP_NAME}`
}

const getAppName = () => {
	if (IS_DEV) {
		return `${APP_NAME} (Dev)`
	}

	if (IS_PREVIEW) {
		return `${APP_NAME} (Preview)`
	}

	return `${APP_NAME}`
}

export default ({ config }: ConfigContext): ExpoConfig => ({
	...config,
	name: getAppName(),
	slug: `${APP_NAME.toLowerCase()}`,
	newArchEnabled: true,
	version: '1.0.0', //ðŸ‘ˆ version control
	orientation: 'portrait',
	icon: './assets/images/icon.png',
	scheme: 'notoria',
	userInterfaceStyle: 'light',
	runtimeVersion: {
		policy: 'appVersion',
	},
	splash: {
		image: './assets/images/splash-icon.png', // path
		resizeMode: 'contain',
		backgroundColor: '#ffffff',
	},
	assetBundlePatterns: ['**/*'],
	ios: {
		supportsTablet: true,
		bundleIdentifier: getUniqueIdentifier(),
	},
	android: {
		adaptiveIcon: {
			foregroundImage: './assets/images/icon.png', //path
			backgroundColor: '#ffffff',
		},
		package: getUniqueIdentifier(),
	},
	web: {
		bundler: 'metro',
		output: 'static',
		favicon: './assets/images/favicon.png', //path
	},
	plugins:
		IS_DEV || IS_PREVIEW
			? ['expo-router', ['expo-dev-client']]
			: ['expo-router'],
	experiments: {
		typedRoutes: true,
		reactCompiler: true,
	},
	extra: {
		eas: {
			projectId: '174c8dba-c6c9-412b-9495-66ba3b888726', //ðŸ‘ˆ generated by eas cli if not exists before
		},
	},
})
